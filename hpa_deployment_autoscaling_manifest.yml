# using horizontal pod autoscaler to scale the deployment
---
apiVersion: apps/v1
kind: Deployment  
metadata:
  name: hpa-deployment
  labels:
    app: hpa-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hpapod
  template:
    metadata:
      labels:
        app: hpapod
    spec:
      containers:
        - name: hpacontainer
          image: k8s.gcr.io/hpa-example
          ports:
            - name: http
              containerPort: 80
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
---
# service manifest for hpa-deployment
apiVersion: v1 
kind: Service
metadata:
  name: hpaClusterService
  labels:
    app: hpaservices
spec:
  type: ClusterIP
  selector:
    app: hpapod
  ports:
    - port: 80
      targetPort: 80
---
# horizontal pod autoscaler manifest
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpadeploymentautoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hpadeployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
...
